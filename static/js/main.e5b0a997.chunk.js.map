{"version":3,"sources":["firebase.js","routes/Auth.js","components/Nweets.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","errorList","setErrorList","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","type","placeholder","required","onClick","prev","Nweets","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","toggleEditting","doc","id","update","attachmentURL","src","width","height","window","confirm","delete","refFromURL","Home","userId","ntweet","setNtweet","nweets","setNweets","attachment","setAttachment","useEffect","collection","onSnapshot","snapshot","nweetArray","docs","map","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","add","maxLength","accept","event","thefile","files","reader","FileReader","onloadend","finishload","result","currentTarget","readAsDataURL","nweet","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedin","exact","path","App","init","setInit","setLoggedin","setUserId","onAuthStateChanged","user","className","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5b0a997.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport 'firebase/storage'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB6rPkpmN-yBzaCp1Xb1kXLdeHdAnoJBNE\",\r\n    authDomain: \"ntwitter-f5ba3.firebaseapp.com\",\r\n    projectId: \"ntwitter-f5ba3\",\r\n    storageBucket: \"ntwitter-f5ba3.appspot.com\",\r\n    messagingSenderId: \"689456407117\",\r\n    appId: \"1:689456407117:web:1d8ea79b0191488a267204\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;// 무슨 차이인지 잘 모르겠음 \r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, {useState} from 'react';\r\nimport {authService, firebaseInstance} from '../firebase';\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true)\r\n    const [errorList, setErrorList] = useState(\"\");\r\n\r\n    const onChange = (e)=>{\r\n        //console.log(e.target.name);\r\n        const {target:{name, value}} = e;\r\n        if (name ==='email'){\r\n            setEmail(value)\r\n        }\r\n        else if (name === 'password') {\r\n            setPassword(value)\r\n        }\r\n     };\r\n\r\n    const onSubmit = async (e)=>{\r\n        e.preventDefault();\r\n        let data;\r\n        try {\r\n            if (newAccount === true){\r\n                //create account\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            }else{\r\n                // log in\r\n                data = await authService.signInWithEmailAndPassword(email,password)\r\n            }\r\n            console.log('data: ', data);\r\n        }\r\n        catch (error) {\r\n            console.log(error.message);\r\n            setErrorList(error.message);\r\n        } \r\n    };\r\n    \r\n    // 토클버튼 작성\r\n    const toggleAccount = () =>{setNewAccount((prev)=>(!prev))}\r\n    const onSocialClick = async (e)=> {\r\n        const {name} = e.target;\r\n        //console.log(name)\r\n        let provider\r\n        if (name ==='google'){\r\n            //provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        };\r\n\r\n        let data = await authService.signInWithPopup(provider);\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <input name='email' type='email' placeholder='email' onChange={onChange} value={email} required/>\r\n                <input name='password' type='password' placeholder='password' onChange={onChange} value={password} required/>\r\n                <input type='submit' value={newAccount ? 'CreateAccount' : 'Log In'}/>\r\n                {errorList}\r\n            </form>\r\n            <div onClick={toggleAccount}>\r\n                {newAccount ? 'Log In ?':'Create Account ?'}\r\n            </div>\r\n            <button onClick={onSocialClick} name='google'>Continue with Google</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Auth;","import React, {useState} from 'react'\r\nimport { dbService, storageService } from '../firebase';\r\n\r\nconst Nweets = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const toggleEditting = () => {\r\n        setEditing(prev=>!prev);// 전에값이 false였으므로 다음에는 true로 바뀌게 된다. \r\n    }\r\n\r\n    const onChange = (e)=>{\r\n        e.preventDefault()\r\n        const {target:{value}} = e;\r\n        setNewNweet(value)\r\n    }\r\n    const onSubmit =(e)=>{\r\n        e.preventDefault();\r\n        console.log(nweetObj);\r\n        dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        })\r\n        setEditing(prev=>!prev);\r\n    }\r\n\r\n\r\n    const onDeleteClick = () => {\r\n        const ok = window.confirm(\"Do you want to Delte???\");\r\n        if (ok) {\r\n            dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            storageService.refFromURL(nweetObj.attachmentURL).delete();\r\n        }       \r\n    }\r\n    return (\r\n        console.log('??',nweetObj),\r\n        //console.log('nn'),\r\n        <div>\r\n            {\r\n                editing ? (\r\n                    <>\r\n                        <form onSubmit={onSubmit}>\r\n                            <input type='text' onChange={onChange} value={newNweet}></input>\r\n                            <input type='submit' value='Update Nweet'></input>\r\n                        </form>\r\n                        <button  onClick={toggleEditting}>Cancel</button>\r\n                    </>  \r\n                        ) :\r\n                        (<>\r\n                            {nweetObj.attachmentURL && (\r\n                                <img src={nweetObj.attachmentURL} width='50px' height='50px'/>\r\n                                )}\r\n                            <h3>{nweetObj.text}</h3>\r\n                            {isOwner && \r\n                            <>\r\n                            <button onClick={onDeleteClick}>Delete</button>\r\n                            <button onClick={toggleEditting}>Edit</button>\r\n                            </>} \r\n                        </>) \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nweets;","import React,{useEffect, useState} from 'react';\r\nimport { dbService, storageService } from '../firebase';\r\nimport {v4 as uuidv4} from 'uuid'\r\n\r\nimport Nweets from '../components/Nweets'\r\n\r\nconst Home = ({userId}) => {\r\n    //console.log('a',userId)\r\n    const [ntweet, setNtweet] = useState('');\r\n    const [nweets, setNweets] = useState([]);\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    // db데이타를 가져오는 함수 \r\n    const getNweets = async ()=>{\r\n        const dbNweets = await dbService.collection('nweets').get();\r\n        dbNweets.forEach((document)=>{\r\n            const nweetObject = {\r\n                ...document.data(),\r\n                id : document.id\r\n            }\r\n            //console.log(document.data())\r\n            setNweets((prev)=>[nweetObject,...prev])\r\n        });// -------------------------------------------------------------------> 구식방법이라고 하네 \r\n    }\r\n                \r\n    useEffect(()=>{\r\n        //getNweets();  -----> 구식방법\r\n        dbService.collection('nweets').onSnapshot((snapshot)=>{\r\n            const nweetArray = snapshot.docs.map((doc)=>({\r\n                id:doc.id, \r\n                ...doc.data()\r\n            }));\r\n            //console.log(nweetArray);\r\n            setNweets(nweetArray);\r\n        });\r\n    },[]);\r\n\r\n    //dbNweets.forEach((document)=>console.log(document))\r\n\r\n    const onSubmit = async (e)=>{\r\n        e.preventDefault();\r\n        let attachmentURL  = '';\r\n        if(attachment !== \"\"){\r\n            const attachmentRef = storageService.ref().child(`${userId.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment,'data_url');\r\n            attachmentURL = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: ntweet,\r\n            createdAt : Date.now(), \r\n            creatorId : userId.uid,   ////id 받아오기\r\n            attachmentURL\r\n        };\r\n        await dbService.collection('nweets').add(\r\n    //         {text: ntweet,\r\n    //         createdAt : Date.now(), \r\n    //          creatorId : userId.uid,   ////id 받아오기\r\n       // }\r\n            nweetObj\r\n    );\r\n         setNtweet(''); // data 초기화 \r\n         setAttachment();\r\n    }\r\n    const onChange = (e) =>{\r\n        const {value} = e.target;\r\n        setNtweet(value);\r\n        \r\n    }\r\n    //console.log(nweets);\r\n\r\n\r\n    const onFileChange = (event)=>{\r\n        //console.log(event.target.files)\r\n        const {target:{files}} = event;\r\n        const thefile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishload=>{\r\n            console.log(finishload)\r\n            const {currentTarget:{result}} = finishload;\r\n            setAttachment(result)\r\n        });//event listner\r\n        reader.readAsDataURL(thefile);\r\n\r\n    }\r\n\r\n    const onClearAttachment = () => {\r\n        setAttachment(null);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Home</h1>\r\n\r\n            <form onSubmit={onSubmit}>\r\n                <input value={ntweet} onChange={onChange} type='text' placeholder='write anything..............' maxLength='120' />\r\n                <input type='submit' value='nweet'/>\r\n                <input type='file' accept='image/*' onChange={onFileChange}/>\r\n                {attachment && \r\n                    <div>\r\n                        <img src={attachment} width='50px' height='50px'/>\r\n                        <button onClick={onClearAttachment}>Cancel upload</button>\r\n                        <button>Upload</button>\r\n                    </div>}\r\n            </form>\r\n            <div>\r\n                {nweets.map((nweet)=>(\r\n                    //console.log(nweet.id),\r\n                    <Nweets key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId===userId.uid}></Nweets>\r\n                )\r\n                    //console.log(nweet)\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useEffect, useState } from 'react';\r\nimport {authService, dbService} from '../firebase';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\n\r\nconst Profile = ({refreshUser, userId}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userId.displayName)\r\n\r\n    const onLogoutClick = () =>{\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    }\r\n\r\n    const getMyNweets = async ()=>{\r\n        //const nweets = await dbService.collection('nweets').where(\"creatorId\",\"==\",userId.uid).orderBy('createdAt').get();\r\n        //console.log(nweets.docs.map(doc=>doc.data()));\r\n    }\r\n    useEffect(()=>{\r\n        getMyNweets()\r\n    })\r\n\r\n    const onChange = (e) =>{\r\n        const {target:{value}} = e;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    const onSubmit = async (event)=>{\r\n        event.preventDefault();\r\n        if (userId.displayName !==newDisplayName) {\r\n           await userId.updateProfile({\r\n               displayName:newDisplayName,\r\n           });\r\n           refreshUser();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <input onChange={onChange} type='text' placeholder='Display Name' value={newDisplayName}/>\r\n                <input type='submit' value='update your profile'/>\r\n            </form>\r\n            <h1>Profile</h1>\r\n            <button onClick={onLogoutClick}>Log out</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navigation = ({userId}) =>{\r\n    return (\r\n        <span>\r\n            <ul>\r\n                <li><Link to=\"/\">Home</Link></li>\r\n                <li><Link to=\"/Profile\">{userId.displayName}의 프로파일</Link></li>\r\n            </ul>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React, {useState} from 'react';\r\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Profile from '../routes/Profile'\r\nimport Navigation from './Navigation';\r\n\r\nconst AppRouter = ({refreshUser,isLoggedin, userId}) => {\r\n    return(\r\n        <Router>\r\n            {isLoggedin && <Navigation userId={userId}/>}\r\n            <Switch>\r\n                {isLoggedin ? (\r\n                <>\r\n                    <Route exact path='/'>\r\n                        <Home userId={userId}></Home>\r\n                    </Route>\r\n                    <Route exact path='/Profile'>\r\n                        <Profile userId={userId} refreshUser={refreshUser}></Profile>\r\n                    </Route>\r\n                </> ): (\r\n                    <Route exact path='/'>\r\n                        <Auth></Auth>\r\n                    </Route>\r\n                )}\r\n            </Switch> \r\n        </Router>\r\n    )\r\n\r\n}\r\n\r\nexport default AppRouter;","import React,{useState, useEffect} from 'react'\r\n//import firebase from '../firebase'\r\nimport AppRouter from './Router'\r\nimport {authService} from '../firebase'\r\n\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false); // authService.currentUser를 받아오는데 시간이 걸리는 데 그전에 실행을 하는 것이 문제이다. \r\n  //console.log('aut :', authService.currentUser);\r\n  const [isLoggedin, setLoggedin] = useState(false);\r\n\r\n  //user id \r\n  const [userId, setUserId] = useState(null);\r\n\r\n  useEffect(() => {authService.onAuthStateChanged((user)=>{\r\n    //console.log('user :',user);\r\n    if (user){\r\n      setLoggedin(true);\r\n      setUserId(user);\r\n    } else {\r\n      setLoggedin(false);\r\n    }\r\n    setInit(true);\r\n  })});\r\n  \r\n  const refreshUser= () =>{\r\n    setUserId(authService.currentUser.displayName)\r\n  }\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedin={isLoggedin} userId={userId}/>: 'Initializing.....'}\r\n      <footer> &copy; {new Date().getFullYear()} ntwitter</footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}